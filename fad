[33mcommit ceb75cfb9d19f1a18f7b4197d544e84cdea09246[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m
Author: Savas Kuzu <kuz14544@spengergasse.at>
Date:   Fri Feb 17 06:53:59 2023 +0100

    Berechnung Komponenten und L√∂schen eines Knotens
    
    - getWegmatrix()
    - getWegmatrixLastMatrix()
    - getComponents()
    - getComponentsLastMatrix()
    - deleteNode()
    
    Die Berechnung der Komponenten sowie das L√∂schen eines Knotens sind wichtige Funktionen innerhalb des Programms. Aktuell gibt es zwei Methoden zur Berechnung der Komponenten, je nachdem ob ein Knoten gel√∂scht wurde oder nicht. Die Entscheidung zwischen diesen Methoden h√§ngt davon ab, ob der Graph mit oder ohne den gel√∂schten Knoten betrachtet wird.
    
    Beide Methoden rufen automatisch die Weg-Matrizen mit den Methoden "getWegmatrix()" und "getWegmatrixLastMatrix()" auf. Es gibt eine klare Zugeh√∂rigkeit zwischen den Methoden, wobei die Methode "getComponents()" zur Methode "getWegmatrix()" geh√∂rt und die Methode "getComponentsLastMatrix()" zur Methode "getWegmatrixLastMatrix()" geh√∂rt.
    
    Aktuell sind alle vier Methoden sowie die beiden Hauptmethoden "getWegmatrix" und "getComponentsLastMatrix" √∂ffentlich zug√§nglich. Allerdings ist geplant, alle vier Methoden in Zukunft mit nur einer Methode aufzurufen. Hierf√ºr sollen die Access-Modifier der Methoden auf "private" gesetzt werden, damit in Zukunft nur noch eine Methode entscheidet, welche der beiden Methoden zur Berechnung der Komponenten genutzt wird.
    
    Des Weiteren soll die Funktionalit√§t erweitert werden, indem es m√∂glich sein wird, einen Knoten zu l√∂schen und den gesamten Graphen neu zu berechnen. Hierf√ºr wurde bereits die Methode "deleteNode()" implementiert. Diese Methode l√∂scht den gew√ºnschten Knoten und berechnet den Graphen neu.
    
    Aktuell liegt der Fokus des Programms auf der Funktionalit√§t, weshalb die Gesamtarchitektur noch nicht effizient ist. Sobald das Programm fertiggestellt ist und auch Artikulationen und Br√ºcken implementiert sind, kann mit dem Refactoring des Codes begonnen werden, um die Effizienz und Lesbarkeit des Codes zu verbessern.

[33mcommit 0dbc7a671f5330172f5ed50d1176cc7f8748172c[m
Author: Savas Kuzu <kuz14544@spengergasse.at>
Date:   Mon Feb 13 02:45:54 2023 +0100

    getComponents()
    
    Die Implementierung zu Berechnung der Anzahl eindeutiger Komponenten in
    einer Matrix erfolgt durch die Verwendung zweier Methoden. Die erste
    Methode, "getWegmatrix()", stellt die Matrix bereit, w√§hrend die
    tats√§chliche Berechnung in der zweiten Methode, "getComponents()",
    durchgef√ºhrt wird. Das Ergebnis der Berechnung wird als R√ºckgabewert des
    Typs "int" zur√ºckgegeben. Es besteht √úberlegung, beide Methoden in einer
    einzigen Methtode zusammenzuf√ºhren, um die Effizienz der Implementierung
    zu verbessern.

[33mcommit 23e96b8d9ce46519d7c2d14343d4f00ef0017ec2[m
Author: Savas Kuzu <kuz14544@spengergasse.at>
Date:   Sat Feb 11 06:03:36 2023 +0100

    getWegmatrix
    
    Methode getWegmatrix ist nun effizienter. N√§chster Schritt, Anzahl der
    Komponenten von den unterschiedlichen Zeilen errechnen.

[33mcommit 62ff869dd1ef19743331b1ffac4560f0010ba5a9[m
Author: Savas Kuzu <kuz14544@spengergasse.at>
Date:   Thu Feb 9 03:48:37 2023 +0100

    Wegmatrix
    
    GetWegmatrix wurde in MatrixVerwaltung implementiert. Noch nicht
    effizient aber die Ausgabe entspricht der Wahrheit. N√§chster Schritt ist
    es die Implementierung getWegmatrix zu Optimieren. Danach k√∂nnen die
    Berechnungen/Implementierungen f√ºr die Komponenten vorgenommen
    werden.

[33mcommit 4a430fa8a1fc8e9b4a82bbc02cbc1ab1107db53b[m
Author: Savas Kuzu <kuz14544@spengergasse.at>
Date:   Mon Feb 6 19:36:27 2023 +0100

    √Ñnderung: Matrix mit einem Knoten.
    
    Matrizen mit nur einem Knoten k√∂nnen jetzt auch geladen werden.
    √Ñnderungen in PersisterCSV und MatrixVerwaltung.

[33mcommit b3561373c3c196e6b591eae666effe2bd686e853[m
Author: Savas Kuzu <kuz14544@spengergasse.at>
Date:   Sat Feb 4 04:19:58 2023 +0100

    getZentrum
    
    Es wurde getZentrum implementiert und einige Funktionen die als
    Versuchszwecke dienten und die keine Rolle Spielen wurden ausgeklammert.
    
    Des weiteren wurde radius, durchmesser und getExzentritaetVomKnoten mit einem "boolean print" erweitert, sodass man jetzt per true oder false eine zus√§tzliche System.out.println Ausgabe einleiten kann.

[33mcommit 6f6112de9dcd309593f3ba3b0b5d1793c1dc78d2[m
Author: Savas Kuzu <kuz14544@spengergasse.at>
Date:   Fri Feb 3 21:13:30 2023 +0100

    vor dem cleanup des codes, ex(x), dm(G), rad(G)

[33mcommit dfb4500c712c9492f333ce98fd03b75db93af0b2[m
Author: Savas Kuzu <kuz14544@spengergasse.at>
Date:   Fri Feb 3 03:11:32 2023 +0100

    vor dem l√∂schen von lamda √úbungen

[33mcommit 81963da41edeaba6c90e4bdc57e649987a68b329[m
Author: Serberx <47865435+Serberx@users.noreply.github.com>
Date:   Fri Feb 3 02:49:05 2023 +0100

    Initial commit
